/**
 * @author Kay Choi
 */
class Board {
    public PuzzleTile puzzleTile;
    private PuzzleTile[,] tiles;
    private int dim;
    private int[] freeIndex;

    /**
     * Determines whether or not the puzzle is complete. The puzzle tiles must
     * be in sequential order by value.
     * @return true if the puzzle is complete
     */
    public bool isComplete();

    /**
     * Moves the designated tile.
     * @param tile the tile to move
     */
    private void moveTile(PuzzleTile tile);

    /**
     * Updates the directions that a group of tiles can move in.
     * @param index the indeces of the center tile
     */
    private void updateTileNeighbors(int[] index);

    /**
     * Initializes the tiles and assigns the tile values at random.
     */
    private void initializeBoard();

    /**
     * Resets the board. The current state of the board is discarded, and the
     * tiles reinitialized.
     */
    public void resetBoard();

    /**
     * Initializes the tutorial board. Only three tiles are out of place.
     */
    private void initializeTutorial();

    /**
     * Creates a new tile at the specified location.
     * @param x the x index of the new tile
     * @param y the y index of the new tile
     * @return the new tile
     */
    private PuzzleTile createTile(int x, int y);

    /**
     * Initializes the settings of a tile.
     * @param tile the tile to modify
     * @param val the value of the tile
     */
    private void setTileValue(PuzzleTile tile, int val);
}


class PuzzleTile {
    private int value;
    private int free = 0;
    private int[] index;

    /**
     * Sets the value of the tile.
     * @param val the new value
     * @return the new value
     */
    public int setValue(int val);

    /**
     * Retrieves the value of the tile.
     * @return the integer value
     */
    public int getValue();

    /**
     * Sets the direction that the tile can move towards.
     * @param dirCode the direction code
     * @return the new direction as a string
     */
    public int setDirection(int dirCode);

    /**
     * Retrieves the direction that the tile can move towards.
     * @return the direction as a string
     */
    public int getDirection();

    /**
     * Retrieves the indeces of the tile.
     * @return the indeces as an array
     */
    public int[] getIndex();

    /**
     * Sets the indeces of the tile.
     * @param newIndex the new indeces of the tile as an array
     * @return true if successful
     */
    public bool setIndex(int[] newIndex);
}
